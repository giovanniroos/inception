@import '~@angular/material/core/style/variables';
@import '~@angular/material/core/style/vendor-prefixes';
@import '~@angular/material/core/typography/typography';
@import '~@angular/cdk/a11y/a11y';

//@import '~@angular/material/theming';
//
//@include mat-core();


// Styles that apply to all appearances of the form-field.

// Min amount of space between start and end hint.
$mat-form-field-hint-min-space: 1em !default;
// Infix stretches to fit the container, but naturally wants to be this wide. We set this in order
// to have a a consistent natural size for the various types of controls that can go in a form
// field.
$mat-form-field-default-infix-width: 180px !default;


.mat-form-field {
  display: inline-block;
  position: relative;
  width: 100%;

  // To avoid problems with text-align.
  text-align: left;

  [dir='rtl'] & {
    text-align: right;
  }
}

// Global wrapper. We need to apply margin to the element for spacing, but
// cannot apply it to the host element directly.
.mat-form-field-wrapper {
  position: relative;
}

// We use a flex layout to baseline align the prefix and suffix elements.
// The underline is outside of it so it can cover all of the elements under this flex container.
.mat-form-field-flex {
  display: inline-flex;
  align-items: baseline;
  box-sizing: border-box;
  width: 100%;
}

.mat-form-field-prefix,
.mat-form-field-suffix {
  white-space: nowrap;
  flex: none;
  position: relative;
}

.mat-form-field-infix {
  display: block;
  position: relative;
  flex: auto;
  min-width: 0;
  width: $mat-form-field-default-infix-width;

  // In high contrast mode IE/Edge will render all of the borders, even if they're transparent.
  // Since we can't remove the border altogether or replace it with a margin, because it'll throw
  // off the baseline, and we can't use a base64-encoded 1x1 transparent image because of CSP,
  // we work around it by setting a linear gradient that goes from `transparent` to `transparent`.
  @include cdk-high-contrast(active, off) {
    border-image: linear-gradient(transparent, transparent);
  }
}

// Used to hide the label overflow on IE, since IE doesn't take transform into account when
// determining overflow.
.mat-form-field-label-wrapper {
  position: absolute;
  left: 0;
  box-sizing: content-box;
  width: 100%;
  height: 100%;
  overflow: hidden;
  pointer-events: none;  // We shouldn't catch mouse events (let them through).

  [dir='rtl'] & {
    // Usually this isn't necessary since the element is 100% wide, but
    // when we've got a `select` node, we need to set a `max-width` on it.
    left: auto;
    right: 0;
  }
}

// The label itself. This is invisible unless it is. The logic to show it is
// basically `empty || (float && (!empty || focused))`. Float is dependent on the
// `floatingPlaceholder` property.
.mat-form-field-label {
  // The label is after the form field control, but needs to be aligned top-left of the infix <div>.
  position: absolute;
  left: 0;

  font: inherit;
  pointer-events: none;  // We shouldn't catch mouse events (let them through).

  // Put ellipsis text overflow.
  width: 100%;
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;

  transform-origin: 0 0;
  transition: transform $swift-ease-out-duration $swift-ease-out-timing-function,
  color $swift-ease-out-duration $swift-ease-out-timing-function,
  width $swift-ease-out-duration $swift-ease-out-timing-function;

  // Hide the label initially, and only show it when it's floating or the control is empty.
  display: none;

  [dir='rtl'] & {
    transform-origin: 100% 0;
    left: auto;
    right: 0;
  }
}

.mat-form-field-empty.mat-form-field-label,
.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label {
  display: block;
}

// Pseudo-class for Chrome and Safari auto-fill to move the label to the floating position.
// This is necessary because these browsers do not actually fire any events when a form auto-fill is
// occurring. Once the autofill is committed, a change event happen and the regular mat-form-field
// classes take over to fulfill this behaviour.
// @breaking-change 8.0.0 will rely on AutofillMonitor instead.
.mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper
.mat-form-field-label {
  // The form field will be considered empty if it is autofilled, and therefore the label will
  // be shown. Therefore we need to override it to hidden...
  display: none;

  // ...and re-show it only if it's able to float.
  .mat-form-field-can-float & {
    display: block;
    transition: none;
  }
}

// Server-side rendered matInput with focus or a placeholder attribute but placeholder not shown
// (used as a pure CSS stand-in for mat-form-field-should-float).
.mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label,
.mat-input-server[placeholder]:not(:placeholder-shown) + .mat-form-field-label-wrapper
.mat-form-field-label {
  display: none;

  .mat-form-field-can-float & {
    display: block;
  }
}

// Disable the label animation when the control is not empty (this prevents label
// animating up when the value is set programmatically).
.mat-form-field-label:not(.mat-form-field-empty) {
  transition: none;
}

.mat-form-field-underline {
  position: absolute;
  width: 100%;
  // Need this so that the underline doesn't block the hover effect.
  pointer-events: none;
  // We transform the height slightly higher to fix inconsistent underline height for some DPIs.
  // Without this we observed that at zoom levels between 50% and 100% some form-field underlines
  // would disappear. The issue appears to be related to fractional pixels since (e.g. underlines
  // with their top at x.6 would disappear, but ones with there top at x.7 were fine). The exact
  // fractions that caused problems seemed to depend on the screen resolution and zoom level. We
  // experimentally discovered that adding a very slight scale factor fixes the issue.
  // `scale3d` must be used rather than `scaleY`, as `scaleY` causes a jitter effect in Chrome.
  transform: scale3d(1, 1.0001, 1);
}

.mat-form-field-ripple {
  position: absolute;
  left: 0;
  width: 100%;
  transform-origin: 50%;
  transform: scaleX(0.5);
  opacity: 0;
  transition: background-color $swift-ease-in-duration $swift-ease-in-timing-function;
}

.mat-form-field.mat-focused,
.mat-form-field.mat-form-field-invalid {
  .mat-form-field-ripple {
    opacity: 1;
    transform: scaleX(1);
    transition: transform 300ms $swift-ease-out-timing-function,
    opacity 100ms $swift-ease-out-timing-function,
    background-color 300ms $swift-ease-out-timing-function;
  }
}

// Wrapper for the hints and error messages.
.mat-form-field-subscript-wrapper {
  position: absolute;
  box-sizing: border-box;
  width: 100%;
  overflow: hidden; // prevents multi-line errors from overlapping the control
}

// Scale down icons in the label and hint to be the same size as the text.
.mat-form-field-subscript-wrapper,
.mat-form-field-label-wrapper {
  .mat-icon {
    width: 1em;
    height: 1em;
    font-size: inherit;
    vertical-align: baseline;
  }
}

// Clears the floats on the hints. This is necessary for the hint animation to work.
.mat-form-field-hint-wrapper {
  display: flex;
}

// Spacer used to make sure start and end hints have enough space between them.
.mat-form-field-hint-spacer {
  flex: 1 0 $mat-form-field-hint-min-space;
}

// Single error message displayed beneath the form field underline.
.mat-error {
  display: block;
}

// Element that can used to reliably align content in relation to the form field control.
.mat-form-field-control-wrapper {
  position: relative;
}

.mat-form-field._mat-animation-noopable {
  .mat-form-field-label,
  .mat-form-field-ripple {
    transition: none;
  }
}




.mat-form-field {
  .mat-checkbox:not(:last-child) {
    margin-right: 0.8em !important;
  }

  .mat-radio-group {
    .mat-radio-button:not(:last-child) {
      .mat-radio-label-content {
        padding-right: 0.8em !important;
      }
    }
    .mat-radio-button .mat-radio-label .mat-radio-label-content {
      line-height: 1.5rem;
    }
  }
}

.mat-form-field.mat-form-field-invalid {
  .mat-radio-outer-circle {
    border-color: #f44336;
  }

  .mat-radio-label-content {
    color: #f44336;
  }
}




// -------------------------------------------------------------------------------------------------
// Start of styles that only apply to the fill appearance of the form-field.
// -------------------------------------------------------------------------------------------------

// The border radius for the form field fill box.
$mat-form-field-fill-border-radius: 4px !default;
// The height of the underline at the bottom of the form field fill box.
$mat-form-field-fill-underline-height: 1px !default;
// The height of the underline ripple at the bottom of the form field fill box.
$mat-form-field-fill-underline-ripple-height: 2px !default;
// The horizontal padding between the edge of the form field fill box and the start of the text.
$mat-form-field-fill-side-padding: 0.75em !default;
// The vertical padding between the edge of the form field fill box and the start of the text as
// well as between the floating label and the value.
$mat-form-field-fill-line-spacing: 0.75em !default;
// The scale of the subscript and floating label text w.r.t the value text.
$mat-form-field-fill-subscript-font-scale: 0.75 !default;
// The horizontal padding between the edge of the subscript box and the start of the subscript text.
$mat-form-field-fill-subscript-padding:
  $mat-form-field-fill-side-padding / $mat-form-field-fill-subscript-font-scale;


.mat-form-field-appearance-fill {
  .mat-form-field-flex {
    border-radius: $mat-form-field-fill-border-radius $mat-form-field-fill-border-radius 0 0;
    padding: $mat-form-field-fill-line-spacing $mat-form-field-fill-side-padding 0
    $mat-form-field-fill-side-padding;

    @include cdk-high-contrast(active, off) {
      outline: solid 1px;
    }
  }

  .mat-form-field-underline::before {
    content: '';
    display: block;
    position: absolute;
    bottom: 0;
    height: $mat-form-field-fill-underline-height;
    width: 100%;
  }

  .mat-form-field-ripple {
    bottom: 0;
    height: $mat-form-field-fill-underline-ripple-height;

    @include cdk-high-contrast(active, off) {
      height: 0;
      border-top: solid $mat-form-field-fill-underline-ripple-height;
    }
  }

  // Note that we need this specific of a selector because we don't want
  // the hover effect to show when the user hovers over the hints.
  &:not(.mat-form-field-disabled) .mat-form-field-flex:hover ~ .mat-form-field-underline {
    .mat-form-field-ripple {
      opacity: 1;
      transform: none;
      transition: opacity 600ms $swift-ease-out-timing-function;
    }
  }

  &._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover {
    & ~ .mat-form-field-underline .mat-form-field-ripple {
      transition: none;
    }
  }

  .mat-form-field-subscript-wrapper {
    padding: 0 $mat-form-field-fill-subscript-padding;
  }
}

// -------------------------------------------------------------------------------------------------
// End of styles that only apply to the fill appearance of the form-field.
// -------------------------------------------------------------------------------------------------


// -------------------------------------------------------------------------------------------------
// Start of styles that only apply to the legacy appearance of the form-field.
// -------------------------------------------------------------------------------------------------

// The height of the underline.
$mat-form-field-legacy-underline-height: 1px !default;

.mat-form-field-appearance-legacy {
  .mat-form-field-label {
    transform: perspective(100px);
    -ms-transform: none;
  }

  .mat-form-field-prefix,
  .mat-form-field-suffix {
    // Allow icons in a prefix or suffix to adapt to the correct size.
    .mat-icon {
      width: 1em;
    }

    // Allow icon buttons in a prefix or suffix to adapt to the correct size.
    .mat-icon-button {
      font: inherit;
      vertical-align: baseline;

      .mat-icon {
        font-size: inherit;
      }
    }
  }

  // The underline is what's shown under the control, its prefix and its suffix.
  // The ripple is the blue animation coming on top of it.
  .mat-form-field-underline {
    height: $mat-form-field-legacy-underline-height;

    @include cdk-high-contrast(active, off) {
      height: 0;
      border-top: solid $mat-form-field-legacy-underline-height;
    }
  }

  .mat-form-field-ripple {
    $height: $mat-form-field-legacy-underline-height * 2;
    top: 0;
    height: $height;

    // In some browsers like Microsoft Edge, the `scaleX` transform causes overflow that exceeds
    // the desired form-field ripple height. See: angular/components#6351
    overflow: hidden;

    @include cdk-high-contrast(active, off) {
      height: 0;
      border-top: solid $height;
    }
  }

  &.mat-form-field-disabled .mat-form-field-underline {
    background-position: 0;
    background-color: transparent;

    @include cdk-high-contrast(active, off) {
      border-top-style: dotted;
      border-top-width: 2px;
    }
  }

  &.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple {
    height: $mat-form-field-legacy-underline-height;
  }
}

// -------------------------------------------------------------------------------------------------
// End of styles that only apply to the legacy appearance of the form-field.
// -------------------------------------------------------------------------------------------------





// -------------------------------------------------------------------------------------------------
// Start of styles that only apply to the outline appearance of the form-field.
// -------------------------------------------------------------------------------------------------

// The horizontal padding between the edge of the form field fill box and the start of the text.
$mat-form-field-outline-side-padding: 0.75em !default;
// The scale of the subscript and floating label text w.r.t the value text.
$mat-form-field-outline-subscript-font-scale: 0.75 !default;
// The amount of overlap between the label and the outline.
$mat-form-field-outline-label-overlap: 0.25em;
// The border radius of the outline.
$mat-form-field-outline-border-radius: 5px;
// The width of the outline.
$mat-form-field-outline-width: 1px;
// The width of the thick outline (used for focus, hover, and error state).
$mat-form-field-outline-thick-width: 2px;
// The horizontal padding between the edge of the subscript box and the start of the subscript text.
$mat-form-field-outline-subscript-padding:
  $mat-form-field-outline-side-padding / $mat-form-field-outline-subscript-font-scale;

.mat-form-field-appearance-outline {
  // We need to add margin to the top to reserve space in the layout for the label which sticks out
  // of the top. In order to ensure that the outline appearance aligns nicely with other form-field
  // appearances when center-aligned, we also need to add the same amount of margin to the bottom.
  .mat-form-field-wrapper {
    margin: $mat-form-field-outline-label-overlap 0;
  }

  .mat-form-field-flex {
    padding: 0 $mat-form-field-outline-side-padding 0 $mat-form-field-outline-side-padding;
    margin-top: -$mat-form-field-outline-label-overlap;
    position: relative;
  }

  .mat-form-field-prefix,
  .mat-form-field-suffix {
    top: $mat-form-field-outline-label-overlap;
  }

  .mat-form-field-outline {
    display: flex;
    position: absolute;
    top: $mat-form-field-outline-label-overlap;
    left: 0;
    right: 0;
    bottom: 0;
    pointer-events: none;
  }

  .mat-form-field-outline-start,
  .mat-form-field-outline-end {
    border: $mat-form-field-outline-width solid currentColor;
    min-width: $mat-form-field-outline-border-radius;
  }

  .mat-form-field-outline-start {
    border-radius: $mat-form-field-outline-border-radius 0 0 $mat-form-field-outline-border-radius;
    border-right-style: none;

    [dir='rtl'] & {
      border-right-style: solid;
      border-left-style: none;
      border-radius: 0 $mat-form-field-outline-border-radius $mat-form-field-outline-border-radius
      0;
    }
  }

  .mat-form-field-outline-end {
    border-radius: 0 $mat-form-field-outline-border-radius $mat-form-field-outline-border-radius 0;
    border-left-style: none;
    flex-grow: 1;

    [dir='rtl'] & {
      border-left-style: solid;
      border-right-style: none;
      border-radius: $mat-form-field-outline-border-radius 0 0
      $mat-form-field-outline-border-radius;
    }
  }

  .mat-form-field-outline-gap {
    // Workaround for Chrome's treatment of borders with non-integer (scaled) widths
    // refer to https://github.com/angular/components/issues/10710
    border-radius: 0.000001px;

    border: $mat-form-field-outline-width solid currentColor;
    border-left-style: none;
    border-right-style: none;
  }

  &.mat-form-field-can-float.mat-form-field-should-float {
    .mat-form-field-outline-gap {
      border-top-color: transparent;
    }
  }

  .mat-form-field-outline-thick {
    opacity: 0;

    .mat-form-field-outline-start,
    .mat-form-field-outline-end,
    .mat-form-field-outline-gap {
      border-width: $mat-form-field-outline-thick-width;
    }
  }

  &.mat-focused,
  &.mat-form-field-invalid {
    .mat-form-field-outline {
      opacity: 0;
      transition: opacity 100ms $swift-ease-out-timing-function;
    }
    .mat-form-field-outline-thick {
      opacity: 1;
    }
  }

  &:not(.mat-form-field-disabled) .mat-form-field-flex:hover {
    & .mat-form-field-outline {
      opacity: 0;
      transition: opacity 600ms $swift-ease-out-timing-function;
    }

    & .mat-form-field-outline-thick {
      opacity: 1;
    }
  }

  .mat-form-field-subscript-wrapper {
    padding: 0 $mat-form-field-outline-subscript-padding;
  }

  &._mat-animation-noopable {
    &:not(.mat-form-field-disabled) .mat-form-field-flex:hover ~ .mat-form-field-outline,
    .mat-form-field-outline,
    .mat-form-field-outline-start,
    .mat-form-field-outline-end,
    .mat-form-field-outline-gap {
      transition: none;
    }
  }
}

// -------------------------------------------------------------------------------------------------
// End of styles that only apply to the outline appearance of the form-field.
// -------------------------------------------------------------------------------------------------


// -------------------------------------------------------------------------------------------------
// Start of styles that only apply to the standard appearance of the form-field.
// -------------------------------------------------------------------------------------------------

// The height of the underline.
$mat-form-field-standard-underline-height: 1px !default;
// The padding between the top of the form field and the label text (used to align the standard
// form field with the fill and outline appearances).
$mat-form-field-standard-padding-top: 0.75em !default;


.mat-form-field-appearance-standard {
  .mat-form-field-flex {
    padding-top: $mat-form-field-standard-padding-top;
  }

  // The underline is what's shown under the control, its prefix and its suffix.
  // The ripple is the blue animation coming on top of it.
  .mat-form-field-underline {
    height: $mat-form-field-standard-underline-height;

    @include cdk-high-contrast(active, off) {
      height: 0;
      border-top: solid $mat-form-field-standard-underline-height;
    }
  }

  .mat-form-field-ripple {
    $height: $mat-form-field-standard-underline-height * 2;
    bottom: 0;
    height: $height;

    @include cdk-high-contrast(active, off) {
      height: 0;
      border-top: $height;
    }
  }

  &.mat-form-field-disabled .mat-form-field-underline {
    background-position: 0;
    background-color: transparent;

    @include cdk-high-contrast(active, off) {
      border-top-style: dotted;
      border-top-width: 2px;
    }
  }

  // Note that we need this specific of a selector because we don't want
  // the hover effect to show when the user hovers over the hints.
  &:not(.mat-form-field-disabled) .mat-form-field-flex:hover ~ .mat-form-field-underline {
    .mat-form-field-ripple {
      opacity: 1;
      transform: none;
      transition: opacity 600ms $swift-ease-out-timing-function;
    }
  }

  &._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover {
    & ~ .mat-form-field-underline .mat-form-field-ripple {
      transition: none;
    }
  }
}

// -------------------------------------------------------------------------------------------------
// End of styles that only apply to the standard appearance of the form-field.
// -------------------------------------------------------------------------------------------------



