<?xml version='1.0' encoding='UTF-8'?><wsdl:definitions xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://security.inception.digital" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ns2="http://schemas.xmlsoap.org/soap/http" xmlns:ns1="http://core.inception.digital" name="SecurityService" targetNamespace="http://security.inception.digital">
  <wsdl:types>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://security.inception.digital" xmlns:security="http://security.inception.digital" xmlns:core="http://core.inception.digital" attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://security.inception.digital" version="1.0">
  <xs:import namespace="http://core.inception.digital"/>
  <xs:element name="AddMemberToGroup" type="security:AddMemberToGroup"/>
  <xs:element name="AddMemberToGroupResponse" type="security:AddMemberToGroupResponse"/>
  <xs:element name="AddRoleToGroup" type="security:AddRoleToGroup"/>
  <xs:element name="AddRoleToGroupResponse" type="security:AddRoleToGroupResponse"/>
  <xs:element name="AddUserDirectoryToTenant" type="security:AddUserDirectoryToTenant"/>
  <xs:element name="AddUserDirectoryToTenantResponse" type="security:AddUserDirectoryToTenantResponse"/>
  <xs:element name="AdminChangePassword" type="security:AdminChangePassword"/>
  <xs:element name="AdminChangePasswordResponse" type="security:AdminChangePasswordResponse"/>
  <xs:element name="ChangePassword" type="security:ChangePassword"/>
  <xs:element name="ChangePasswordResponse" type="security:ChangePasswordResponse"/>
  <xs:element name="CreateGroup" type="security:CreateGroup"/>
  <xs:element name="CreateGroupResponse" type="security:CreateGroupResponse"/>
  <xs:element name="CreateTenant" type="security:CreateTenant"/>
  <xs:element name="CreateTenantResponse" type="security:CreateTenantResponse"/>
  <xs:element name="CreateUser" type="security:CreateUser"/>
  <xs:element name="CreateUserDirectory" type="security:CreateUserDirectory"/>
  <xs:element name="CreateUserDirectoryResponse" type="security:CreateUserDirectoryResponse"/>
  <xs:element name="CreateUserResponse" type="security:CreateUserResponse"/>
  <xs:element name="DeleteGroup" type="security:DeleteGroup"/>
  <xs:element name="DeleteGroupResponse" type="security:DeleteGroupResponse"/>
  <xs:element name="DeleteTenant" type="security:DeleteTenant"/>
  <xs:element name="DeleteTenantResponse" type="security:DeleteTenantResponse"/>
  <xs:element name="DeleteUser" type="security:DeleteUser"/>
  <xs:element name="DeleteUserDirectory" type="security:DeleteUserDirectory"/>
  <xs:element name="DeleteUserDirectoryResponse" type="security:DeleteUserDirectoryResponse"/>
  <xs:element name="DeleteUserResponse" type="security:DeleteUserResponse"/>
  <xs:element name="GetGroup" type="security:GetGroup"/>
  <xs:element name="GetGroupNames" type="security:GetGroupNames"/>
  <xs:element name="GetGroupNamesForUser" type="security:GetGroupNamesForUser"/>
  <xs:element name="GetGroupNamesForUserResponse" type="security:GetGroupNamesForUserResponse"/>
  <xs:element name="GetGroupNamesResponse" type="security:GetGroupNamesResponse"/>
  <xs:element name="GetGroupResponse" type="security:GetGroupResponse"/>
  <xs:element name="GetGroups" type="security:GetGroups"/>
  <xs:element name="GetGroupsResponse" type="security:GetGroupsResponse"/>
  <xs:element name="GetMembersForGroup" type="security:GetMembersForGroup"/>
  <xs:element name="GetMembersForGroupResponse" type="security:GetMembersForGroupResponse"/>
  <xs:element name="GetRoleCodesForGroup" type="security:GetRoleCodesForGroup"/>
  <xs:element name="GetRoleCodesForGroupResponse" type="security:GetRoleCodesForGroupResponse"/>
  <xs:element name="GetRoles" type="security:GetRoles"/>
  <xs:element name="GetRolesForGroup" type="security:GetRolesForGroup"/>
  <xs:element name="GetRolesForGroupResponse" type="security:GetRolesForGroupResponse"/>
  <xs:element name="GetRolesResponse" type="security:GetRolesResponse"/>
  <xs:element name="GetTenant" type="security:GetTenant"/>
  <xs:element name="GetTenantName" type="security:GetTenantName"/>
  <xs:element name="GetTenantNameResponse" type="security:GetTenantNameResponse"/>
  <xs:element name="GetTenantResponse" type="security:GetTenantResponse"/>
  <xs:element name="GetTenants" type="security:GetTenants"/>
  <xs:element name="GetTenantsForUserDirectory" type="security:GetTenantsForUserDirectory"/>
  <xs:element name="GetTenantsForUserDirectoryResponse" type="security:GetTenantsForUserDirectoryResponse"/>
  <xs:element name="GetTenantsResponse" type="security:GetTenantsResponse"/>
  <xs:element name="GetUser" type="security:GetUser"/>
  <xs:element name="GetUserDirectories" type="security:GetUserDirectories"/>
  <xs:element name="GetUserDirectoriesForTenant" type="security:GetUserDirectoriesForTenant"/>
  <xs:element name="GetUserDirectoriesForTenantResponse" type="security:GetUserDirectoriesForTenantResponse"/>
  <xs:element name="GetUserDirectoriesResponse" type="security:GetUserDirectoriesResponse"/>
  <xs:element name="GetUserDirectory" type="security:GetUserDirectory"/>
  <xs:element name="GetUserDirectoryCapabilities" type="security:GetUserDirectoryCapabilities"/>
  <xs:element name="GetUserDirectoryCapabilitiesResponse" type="security:GetUserDirectoryCapabilitiesResponse"/>
  <xs:element name="GetUserDirectoryName" type="security:GetUserDirectoryName"/>
  <xs:element name="GetUserDirectoryNameResponse" type="security:GetUserDirectoryNameResponse"/>
  <xs:element name="GetUserDirectoryResponse" type="security:GetUserDirectoryResponse"/>
  <xs:element name="GetUserDirectorySummaries" type="security:GetUserDirectorySummaries"/>
  <xs:element name="GetUserDirectorySummariesForTenant" type="security:GetUserDirectorySummariesForTenant"/>
  <xs:element name="GetUserDirectorySummariesForTenantResponse" type="security:GetUserDirectorySummariesForTenantResponse"/>
  <xs:element name="GetUserDirectorySummariesResponse" type="security:GetUserDirectorySummariesResponse"/>
  <xs:element name="GetUserDirectoryTypeForUserDirectory" type="security:GetUserDirectoryTypeForUserDirectory"/>
  <xs:element name="GetUserDirectoryTypeForUserDirectoryResponse" type="security:GetUserDirectoryTypeForUserDirectoryResponse"/>
  <xs:element name="GetUserDirectoryTypes" type="security:GetUserDirectoryTypes"/>
  <xs:element name="GetUserDirectoryTypesResponse" type="security:GetUserDirectoryTypesResponse"/>
  <xs:element name="GetUserName" type="security:GetUserName"/>
  <xs:element name="GetUserNameResponse" type="security:GetUserNameResponse"/>
  <xs:element name="GetUserResponse" type="security:GetUserResponse"/>
  <xs:element name="GetUsers" type="security:GetUsers"/>
  <xs:element name="GetUsersResponse" type="security:GetUsersResponse"/>
  <xs:element name="Group" type="security:Group"/>
  <xs:element name="GroupMember" type="security:GroupMember"/>
  <xs:element name="GroupMembers" type="security:GroupMembers"/>
  <xs:element name="GroupRole" type="security:GroupRole"/>
  <xs:element name="Groups" type="security:Groups"/>
  <xs:element name="PasswordChange" type="security:PasswordChange"/>
  <xs:element name="RemoveMemberFromGroup" type="security:RemoveMemberFromGroup"/>
  <xs:element name="RemoveMemberFromGroupResponse" type="security:RemoveMemberFromGroupResponse"/>
  <xs:element name="RemoveRoleFromGroup" type="security:RemoveRoleFromGroup"/>
  <xs:element name="RemoveRoleFromGroupResponse" type="security:RemoveRoleFromGroupResponse"/>
  <xs:element name="RemoveUserDirectoryFromTenant" type="security:RemoveUserDirectoryFromTenant"/>
  <xs:element name="RemoveUserDirectoryFromTenantResponse" type="security:RemoveUserDirectoryFromTenantResponse"/>
  <xs:element name="ResetPassword" type="security:ResetPassword"/>
  <xs:element name="ResetPasswordResponse" type="security:ResetPasswordResponse"/>
  <xs:element name="Role" type="security:Role"/>
  <xs:element name="Tenant" type="security:Tenant"/>
  <xs:element name="Tenants" type="security:Tenants"/>
  <xs:element name="UpdateGroup" type="security:UpdateGroup"/>
  <xs:element name="UpdateGroupResponse" type="security:UpdateGroupResponse"/>
  <xs:element name="UpdateTenant" type="security:UpdateTenant"/>
  <xs:element name="UpdateTenantResponse" type="security:UpdateTenantResponse"/>
  <xs:element name="UpdateUser" type="security:UpdateUser"/>
  <xs:element name="UpdateUserDirectory" type="security:UpdateUserDirectory"/>
  <xs:element name="UpdateUserDirectoryResponse" type="security:UpdateUserDirectoryResponse"/>
  <xs:element name="UpdateUserResponse" type="security:UpdateUserResponse"/>
  <xs:element name="User" type="security:User"/>
  <xs:element name="UserDirectories" type="security:UserDirectories"/>
  <xs:element name="UserDirectory" type="security:UserDirectory"/>
  <xs:element name="UserDirectoryCapabilities" type="security:UserDirectoryCapabilities"/>
  <xs:element name="UserDirectoryParameter" type="security:UserDirectoryParameter"/>
  <xs:element name="UserDirectorySummaries" type="security:UserDirectorySummaries"/>
  <xs:element name="UserDirectorySummary" type="security:UserDirectorySummary"/>
  <xs:element name="UserDirectoryType" type="security:UserDirectoryType"/>
  <xs:element name="Users" type="security:Users"/>
  <xs:complexType name="GetUser">
    <xs:sequence>
      <xs:element name="UserDirectoryId" type="xs:string"/>
      <xs:element name="Username" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="GetUserResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="User" type="security:User"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="User">
    <xs:sequence>
      <xs:element name="UserDirectoryId" type="xs:string"/>
      <xs:element name="Username" type="xs:string"/>
      <xs:element name="Name" type="xs:string"/>
      <xs:element minOccurs="0" name="PreferredName" type="xs:string"/>
      <xs:element minOccurs="0" name="MobileNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="PhoneNumber" type="xs:string"/>
      <xs:element minOccurs="0" name="Email" type="xs:string"/>
      <xs:element name="Status" type="security:UserStatus"/>
      <xs:element minOccurs="0" name="Password" type="xs:string"/>
      <xs:element minOccurs="0" name="PasswordAttempts" type="xs:int"/>
      <xs:element minOccurs="0" name="PasswordExpiry" type="xs:dateTime"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="GetUserDirectory">
    <xs:sequence>
      <xs:element name="UserDirectoryId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="GetUserDirectoryResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="UserDirectory" type="security:UserDirectory"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="UserDirectory">
    <xs:sequence>
      <xs:element name="Id" type="xs:string"/>
      <xs:element name="Type" type="xs:string"/>
      <xs:element name="Name" type="xs:string"/>
      <xs:element name="Parameters">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" name="Parameter" type="security:UserDirectoryParameter"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="UserDirectoryParameter">
    <xs:sequence>
      <xs:element name="Name" type="xs:string"/>
      <xs:element name="Value" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="GetUserDirectoryCapabilities">
    <xs:sequence>
      <xs:element name="UserDirectoryId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="GetUserDirectoryCapabilitiesResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="UserDirectoryCapabilities" type="security:UserDirectoryCapabilities"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="UserDirectoryCapabilities">
    <xs:sequence>
      <xs:element name="SupportsAdminChangePassword" type="xs:boolean"/>
      <xs:element name="SupportsChangePassword" type="xs:boolean"/>
      <xs:element name="SupportsGroupAdministration" type="xs:boolean"/>
      <xs:element name="SupportsGroupMemberAdministration" type="xs:boolean"/>
      <xs:element name="SupportsPasswordExpiry" type="xs:boolean"/>
      <xs:element name="SupportsPasswordHistory" type="xs:boolean"/>
      <xs:element name="SupportsUserAdministration" type="xs:boolean"/>
      <xs:element name="SupportsUserLocks" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DeleteUserDirectory">
    <xs:sequence>
      <xs:element name="UserDirectoryId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DeleteUserDirectoryResponse">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="GetRoles">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="GetRolesResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="Role" type="security:Role"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Role">
    <xs:sequence>
      <xs:element name="Code" type="xs:string"/>
      <xs:element name="Name" type="xs:string"/>
      <xs:element minOccurs="0" name="Description" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="GetUserDirectoryTypes">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="GetUserDirectoryTypesResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="UserDirectoryType" type="security:UserDirectoryType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="UserDirectoryType">
    <xs:sequence>
      <xs:element name="Code" type="xs:string"/>
      <xs:element name="Name" type="xs:string"/>
      <xs:element name="UserDirectoryClassName" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="CreateTenant">
    <xs:sequence>
      <xs:element name="Tenant" type="security:Tenant"/>
      <xs:element name="CreateUserDirectory" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Tenant">
    <xs:sequence>
      <xs:element name="Id" type="xs:string"/>
      <xs:element name="Name" type="xs:string"/>
      <xs:element name="Status" type="security:TenantStatus"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="CreateTenantResponse">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="GetUserName">
    <xs:sequence>
      <xs:element name="UserDirectoryId" type="xs:string"/>
      <xs:element name="Username" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="GetUserNameResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="UserName" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="RemoveMemberFromGroup">
    <xs:sequence>
      <xs:element name="UserDirectoryId" type="xs:string"/>
      <xs:element name="GroupName" type="xs:string"/>
      <xs:element name="MemberType" type="security:GroupMemberType"/>
      <xs:element name="MemberName" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="RemoveMemberFromGroupResponse">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="DeleteGroup">
    <xs:sequence>
      <xs:element name="UserDirectoryId" type="xs:string"/>
      <xs:element name="GroupName" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DeleteGroupResponse">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="GetMembersForGroup">
    <xs:sequence>
      <xs:element name="UserDirectoryId" type="xs:string"/>
      <xs:element name="GroupName" type="xs:string"/>
      <xs:element minOccurs="0" name="Filter" type="xs:string"/>
      <xs:element minOccurs="0" name="SortDirection" type="core:SortDirection"/>
      <xs:element minOccurs="0" name="PageIndex" type="xs:int"/>
      <xs:element minOccurs="0" name="PageSize" type="xs:int"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="GetMembersForGroupResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="GroupMembers" type="security:GroupMembers"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="GroupMembers">
    <xs:sequence>
      <xs:element name="UserDirectoryId" type="xs:string"/>
      <xs:element name="GroupName" type="xs:string"/>
      <xs:element name="GroupMembers">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" name="GroupMember" type="security:GroupMember"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="Total" type="xs:long"/>
      <xs:element minOccurs="0" name="Filter" type="xs:string"/>
      <xs:element minOccurs="0" name="SortDirection" type="core:SortDirection"/>
      <xs:element minOccurs="0" name="PageIndex" type="xs:int"/>
      <xs:element minOccurs="0" name="PageSize" type="xs:int"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="GroupMember">
    <xs:sequence>
      <xs:element name="UserDirectoryId" type="xs:string"/>
      <xs:element name="GroupName" type="xs:string"/>
      <xs:element name="MemberName" type="xs:string"/>
      <xs:element name="MemberType" type="security:GroupMemberType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="GetGroupNamesForUser">
    <xs:sequence>
      <xs:element name="UserDirectoryId" type="xs:string"/>
      <xs:element name="Username" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="GetGroupNamesForUserResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="GroupName" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DeleteUser">
    <xs:sequence>
      <xs:element name="UserDirectoryId" type="xs:string"/>
      <xs:element name="Username" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DeleteUserResponse">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="GetUserDirectoryTypeForUserDirectory">
    <xs:sequence>
      <xs:element name="UserDirectoryId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="GetUserDirectoryTypeForUserDirectoryResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="UserDirectoryType" type="security:UserDirectoryType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DeleteTenant">
    <xs:sequence>
      <xs:element name="TenantId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DeleteTenantResponse">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="GetRoleCodesForGroup">
    <xs:sequence>
      <xs:element name="UserDirectoryId" type="xs:string"/>
      <xs:element name="GroupName" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="GetRoleCodesForGroupResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="RoleCode" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="GetTenantName">
    <xs:sequence>
      <xs:element name="TenantId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="GetTenantNameResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="TenantName" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="GetGroupNames">
    <xs:sequence>
      <xs:element name="UserDirectoryId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="GetGroupNamesResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="GroupName" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AddUserDirectoryToTenant">
    <xs:sequence>
      <xs:element name="TenantId" type="xs:string"/>
      <xs:element name="UserDirectoryId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AddUserDirectoryToTenantResponse">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="ChangePassword">
    <xs:sequence>
      <xs:element name="Username" type="xs:string"/>
      <xs:element name="PasswordChange" type="security:PasswordChange"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PasswordChange">
    <xs:sequence>
      <xs:element minOccurs="0" name="ExpirePassword" type="xs:boolean"/>
      <xs:element minOccurs="0" name="LockUser" type="xs:boolean"/>
      <xs:element name="NewPassword" type="xs:string"/>
      <xs:element minOccurs="0" name="Password" type="xs:string"/>
      <xs:element name="Reason" type="security:PasswordChangeReason"/>
      <xs:element minOccurs="0" name="ResetPasswordHistory" type="xs:boolean"/>
      <xs:element minOccurs="0" name="SecurityCode" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ChangePasswordResponse">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="GetUserDirectoriesForTenant">
    <xs:sequence>
      <xs:element name="TenantId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="GetUserDirectoriesForTenantResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="UserDirectory" type="security:UserDirectory"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ResetPassword">
    <xs:sequence>
      <xs:element name="Username" type="xs:string"/>
      <xs:element name="ResetPasswordUrl" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ResetPasswordResponse">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="AdminChangePassword">
    <xs:sequence>
      <xs:element name="UserDirectoryId" type="xs:string"/>
      <xs:element name="Username" type="xs:string"/>
      <xs:element name="PasswordChange" type="security:PasswordChange"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AdminChangePasswordResponse">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="GetUserDirectories">
    <xs:sequence>
      <xs:element name="Filter" type="xs:string"/>
      <xs:element name="SortDirection" type="core:SortDirection"/>
      <xs:element name="PageIndex" type="xs:int"/>
      <xs:element name="PageSize" type="xs:int"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="GetUserDirectoriesResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="UserDirectories" type="security:UserDirectories"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="UserDirectories">
    <xs:sequence>
      <xs:element name="UserDirectories">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" name="UserDirectory" type="security:UserDirectory"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="Total" type="xs:long"/>
      <xs:element minOccurs="0" name="Filter" type="xs:string"/>
      <xs:element minOccurs="0" name="SortDirection" type="core:SortDirection"/>
      <xs:element minOccurs="0" name="PageIndex" type="xs:int"/>
      <xs:element minOccurs="0" name="PageSize" type="xs:int"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="GetRolesForGroup">
    <xs:sequence>
      <xs:element name="UserDirectoryId" type="xs:string"/>
      <xs:element name="GroupName" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="GetRolesForGroupResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="GroupRole" type="security:GroupRole"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="GroupRole">
    <xs:sequence>
      <xs:element name="UserDirectoryId" type="xs:string"/>
      <xs:element name="GroupName" type="xs:string"/>
      <xs:element name="RoleCode" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="GetUserDirectorySummariesForTenant">
    <xs:sequence>
      <xs:element name="TenantId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="GetUserDirectorySummariesForTenantResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="UserDirectorySummary" type="security:UserDirectorySummary"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="UserDirectorySummary">
    <xs:sequence>
      <xs:element name="Id" type="xs:string"/>
      <xs:element name="Type" type="xs:string"/>
      <xs:element name="Name" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AddMemberToGroup">
    <xs:sequence>
      <xs:element name="UserDirectoryId" type="xs:string"/>
      <xs:element name="GroupName" type="xs:string"/>
      <xs:element name="MemberType" type="security:GroupMemberType"/>
      <xs:element name="MemberName" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AddMemberToGroupResponse">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="GetTenant">
    <xs:sequence>
      <xs:element name="TenantId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="GetTenantResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="Tenant" type="security:Tenant"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="UpdateGroup">
    <xs:sequence>
      <xs:element name="Group" type="security:Group"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Group">
    <xs:sequence>
      <xs:element name="UserDirectoryId" type="xs:string"/>
      <xs:element name="Name" type="xs:string"/>
      <xs:element minOccurs="0" name="Description" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="UpdateGroupResponse">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="UpdateUserDirectory">
    <xs:sequence>
      <xs:element name="UserDirectory" type="security:UserDirectory"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="UpdateUserDirectoryResponse">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="GetTenantsForUserDirectory">
    <xs:sequence>
      <xs:element name="UserDirectoryId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="GetTenantsForUserDirectoryResponse">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="Tenant" type="security:Tenant"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="UpdateUser">
    <xs:sequence>
      <xs:element name="User" type="security:User"/>
      <xs:element name="ExpirePassword" type="xs:boolean"/>
      <xs:element name="LockUser" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="UpdateUserResponse">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="GetTenants">
    <xs:sequence>
      <xs:element minOccurs="0" name="Filter" type="xs:string"/>
      <xs:element minOccurs="0" name="SortDirection" type="core:SortDirection"/>
      <xs:element minOccurs="0" name="PageIndex" type="xs:int"/>
      <xs:element minOccurs="0" name="PageSize" type="xs:int"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="GetTenantsResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="Tenant" type="security:Tenants"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Tenants">
    <xs:sequence>
      <xs:element name="Tenants">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" name="Tenant" type="security:Tenant"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="Total" type="xs:long"/>
      <xs:element minOccurs="0" name="Filter" type="xs:string"/>
      <xs:element minOccurs="0" name="SortDirection" type="core:SortDirection"/>
      <xs:element minOccurs="0" name="PageIndex" type="xs:int"/>
      <xs:element minOccurs="0" name="PageSize" type="xs:int"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="GetGroup">
    <xs:sequence>
      <xs:element name="UserDirectoryId" type="xs:string"/>
      <xs:element name="GroupName" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="GetGroupResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="Group" type="security:Group"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="CreateUserDirectory">
    <xs:sequence>
      <xs:element name="UserDirectory" type="security:UserDirectory"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="CreateUserDirectoryResponse">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="GetUserDirectorySummaries">
    <xs:sequence>
      <xs:element name="Filter" type="xs:string"/>
      <xs:element name="SortDirection" type="core:SortDirection"/>
      <xs:element name="PageIndex" type="xs:int"/>
      <xs:element name="PageSize" type="xs:int"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="GetUserDirectorySummariesResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="UserDirectorySummaries" type="security:UserDirectorySummaries"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="UserDirectorySummaries">
    <xs:sequence>
      <xs:element name="UserDirectorySummaries">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" name="UserDirectorySummary" type="security:UserDirectorySummary"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="Total" type="xs:long"/>
      <xs:element minOccurs="0" name="Filter" type="xs:string"/>
      <xs:element minOccurs="0" name="SortDirection" type="core:SortDirection"/>
      <xs:element minOccurs="0" name="PageIndex" type="xs:int"/>
      <xs:element minOccurs="0" name="PageSize" type="xs:int"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="GetGroups">
    <xs:sequence>
      <xs:element name="UserDirectoryId" type="xs:string"/>
      <xs:element minOccurs="0" name="Filter" type="xs:string"/>
      <xs:element minOccurs="0" name="SortDirection" type="core:SortDirection"/>
      <xs:element minOccurs="0" name="PageIndex" type="xs:int"/>
      <xs:element minOccurs="0" name="PageSize" type="xs:int"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="GetGroupsResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="Groups" type="security:Groups"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Groups">
    <xs:sequence>
      <xs:element name="UserDirectoryId" type="xs:string"/>
      <xs:element name="Groups">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" name="Group" type="security:Group"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="Total" type="xs:long"/>
      <xs:element minOccurs="0" name="Filter" type="xs:string"/>
      <xs:element minOccurs="0" name="SortDirection" type="core:SortDirection"/>
      <xs:element minOccurs="0" name="PageIndex" type="xs:int"/>
      <xs:element minOccurs="0" name="PageSize" type="xs:int"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="GetUsers">
    <xs:sequence>
      <xs:element name="UserDirectoryId" type="xs:string"/>
      <xs:element minOccurs="0" name="Filter" type="xs:string"/>
      <xs:element minOccurs="0" name="SortBy" type="security:UserSortBy"/>
      <xs:element minOccurs="0" name="SortDirection" type="core:SortDirection"/>
      <xs:element minOccurs="0" name="PageIndex" type="xs:int"/>
      <xs:element minOccurs="0" name="PageSize" type="xs:int"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="GetUsersResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="Users" type="security:Users"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Users">
    <xs:sequence>
      <xs:element name="UserDirectoryId" type="xs:string"/>
      <xs:element name="Users">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" name="User" type="security:User"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="Total" type="xs:long"/>
      <xs:element minOccurs="0" name="Filter" type="xs:string"/>
      <xs:element minOccurs="0" name="SortBy" type="security:UserSortBy"/>
      <xs:element minOccurs="0" name="SortDirection" type="core:SortDirection"/>
      <xs:element minOccurs="0" name="PageIndex" type="xs:int"/>
      <xs:element minOccurs="0" name="PageSize" type="xs:int"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="UpdateTenant">
    <xs:sequence>
      <xs:element name="Tenant" type="security:Tenant"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="UpdateTenantResponse">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="RemoveUserDirectoryFromTenant">
    <xs:sequence>
      <xs:element name="TenantId" type="xs:string"/>
      <xs:element name="UserDirectoryId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="RemoveUserDirectoryFromTenantResponse">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="CreateUser">
    <xs:sequence>
      <xs:element name="User" type="security:User"/>
      <xs:element name="ExpiredPassword" type="xs:boolean"/>
      <xs:element name="UserLocked" type="xs:boolean"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="CreateUserResponse">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="CreateGroup">
    <xs:sequence>
      <xs:element name="Group" type="security:Group"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="CreateGroupResponse">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="AddRoleToGroup">
    <xs:sequence>
      <xs:element name="UserDirectoryId" type="xs:string"/>
      <xs:element name="GroupName" type="xs:string"/>
      <xs:element name="RoleCode" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AddRoleToGroupResponse">
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="GetUserDirectoryName">
    <xs:sequence>
      <xs:element name="UserDirectoryId" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="GetUserDirectoryNameResponse">
    <xs:sequence>
      <xs:element minOccurs="0" name="UserDirectoryName" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="RemoveRoleFromGroup">
    <xs:sequence>
      <xs:element name="UserDirectoryId" type="xs:string"/>
      <xs:element name="GroupName" type="xs:string"/>
      <xs:element name="RoleCode" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="RemoveRoleFromGroupResponse">
    <xs:sequence/>
  </xs:complexType>
  <xs:simpleType name="UserStatus">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Inactive"/>
      <xs:enumeration value="Active"/>
      <xs:enumeration value="Locked"/>
      <xs:enumeration value="Expired"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="TenantStatus">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Inactive"/>
      <xs:enumeration value="Active"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="GroupMemberType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="User"/>
      <xs:enumeration value="Group"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="PasswordChangeReason">
    <xs:restriction base="xs:string">
      <xs:enumeration value="User"/>
      <xs:enumeration value="Administrative"/>
      <xs:enumeration value="Reset"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="UserSortBy">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Name"/>
      <xs:enumeration value="PreferredName"/>
      <xs:enumeration value="Username"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="UserNotFoundException" nillable="true" type="core:ServiceError"/>
  <xs:element name="UserDirectoryNotFoundException" nillable="true" type="core:ServiceError"/>
  <xs:element name="DuplicateTenantException" nillable="true" type="core:ServiceError"/>
  <xs:element name="GroupMemberNotFoundException" nillable="true" type="core:ServiceError"/>
  <xs:element name="GroupNotFoundException" nillable="true" type="core:ServiceError"/>
  <xs:element name="ExistingGroupMembersException" nillable="true" type="core:ServiceError"/>
  <xs:element name="UserDirectoryTypeNotFoundException" nillable="true" type="core:ServiceError"/>
  <xs:element name="TenantNotFoundException" nillable="true" type="core:ServiceError"/>
  <xs:element name="ExistingTenantUserDirectoryException" nillable="true" type="core:ServiceError"/>
  <xs:element name="InvalidSecurityCodeException" nillable="true" type="core:ServiceError"/>
  <xs:element name="ExistingPasswordException" nillable="true" type="core:ServiceError"/>
  <xs:element name="AuthenticationFailedException" nillable="true" type="core:ServiceError"/>
  <xs:element name="UserLockedException" nillable="true" type="core:ServiceError"/>
  <xs:element name="ExistingGroupMemberException" nillable="true" type="core:ServiceError"/>
  <xs:element name="DuplicateUserDirectoryException" nillable="true" type="core:ServiceError"/>
  <xs:element name="TenantUserDirectoryNotFoundException" nillable="true" type="core:ServiceError"/>
  <xs:element name="DuplicateUserException" nillable="true" type="core:ServiceError"/>
  <xs:element name="DuplicateGroupException" nillable="true" type="core:ServiceError"/>
  <xs:element name="RoleNotFoundException" nillable="true" type="core:ServiceError"/>
  <xs:element name="ExistingGroupRoleException" nillable="true" type="core:ServiceError"/>
  <xs:element name="GroupRoleNotFoundException" nillable="true" type="core:ServiceError"/>
</xs:schema>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://core.inception.digital" xmlns:core="http://core.inception.digital" attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://core.inception.digital" version="1.0">
  <xs:element name="InvalidArgumentError" type="core:InvalidArgumentError"/>
  <xs:element name="ServiceError" type="core:ServiceError"/>
  <xs:element name="ValidationError" type="core:ValidationError"/>
  <xs:element name="ValidationErrorAttribute" type="core:ValidationErrorAttribute"/>
  <xs:complexType name="ServiceError">
    <xs:sequence>
      <xs:element name="When" type="xs:dateTime"/>
      <xs:element name="Code" type="xs:string"/>
      <xs:element name="Message" type="xs:string"/>
      <xs:element name="Detail" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="InvalidArgumentError">
    <xs:sequence>
      <xs:element name="When" type="xs:dateTime"/>
      <xs:element name="Message" type="xs:string"/>
      <xs:element name="Name" type="xs:string"/>
      <xs:element name="Detail" type="xs:string"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="ValidationErrors" type="core:ValidationError"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ValidationError">
    <xs:sequence>
      <xs:element name="Property" type="xs:string"/>
      <xs:element name="Message" type="xs:string"/>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="Attributes" type="core:ValidationErrorAttribute"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ValidationErrorAttribute">
    <xs:sequence>
      <xs:element name="Name" type="xs:string"/>
      <xs:element minOccurs="0" name="Value" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="SortDirection">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Ascending"/>
      <xs:enumeration value="Descending"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="InvalidArgumentException" nillable="true" type="core:InvalidArgumentError"/>
  <xs:element name="ServiceUnavailableException" nillable="true" type="core:ServiceError"/>
</xs:schema>
  </wsdl:types>
  <wsdl:message name="CreateUserResponse">
    <wsdl:part element="tns:CreateUserResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetTenantsForUserDirectoryResponse">
    <wsdl:part element="tns:GetTenantsForUserDirectoryResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetUserName">
    <wsdl:part element="tns:GetUserName" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GroupMemberNotFoundException">
    <wsdl:part element="tns:GroupMemberNotFoundException" name="GroupMemberNotFoundException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ExistingGroupMemberException">
    <wsdl:part element="tns:ExistingGroupMemberException" name="ExistingGroupMemberException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ExistingPasswordException">
    <wsdl:part element="tns:ExistingPasswordException" name="ExistingPasswordException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetUserDirectoryTypeForUserDirectoryResponse">
    <wsdl:part element="tns:GetUserDirectoryTypeForUserDirectoryResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="DeleteTenant">
    <wsdl:part element="tns:DeleteTenant" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="TenantUserDirectoryNotFoundException">
    <wsdl:part element="tns:TenantUserDirectoryNotFoundException" name="TenantUserDirectoryNotFoundException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetUserDirectoryTypesResponse">
    <wsdl:part element="tns:GetUserDirectoryTypesResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="AddUserDirectoryToTenant">
    <wsdl:part element="tns:AddUserDirectoryToTenant" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="UserLockedException">
    <wsdl:part element="tns:UserLockedException" name="UserLockedException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetUserDirectoriesForTenant">
    <wsdl:part element="tns:GetUserDirectoriesForTenant" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminChangePassword">
    <wsdl:part element="tns:AdminChangePassword" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="AddMemberToGroupResponse">
    <wsdl:part element="tns:AddMemberToGroupResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateUserDirectory">
    <wsdl:part element="tns:UpdateUserDirectory" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="AddUserDirectoryToTenantResponse">
    <wsdl:part element="tns:AddUserDirectoryToTenantResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateUserDirectory">
    <wsdl:part element="tns:CreateUserDirectory" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetRoleCodesForGroupResponse">
    <wsdl:part element="tns:GetRoleCodesForGroupResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ExistingGroupRoleException">
    <wsdl:part element="tns:ExistingGroupRoleException" name="ExistingGroupRoleException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetRolesForGroupResponse">
    <wsdl:part element="tns:GetRolesForGroupResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateTenantResponse">
    <wsdl:part element="tns:CreateTenantResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateUserDirectoryResponse">
    <wsdl:part element="tns:CreateUserDirectoryResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetUserDirectorySummariesResponse">
    <wsdl:part element="tns:GetUserDirectorySummariesResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="DeleteUserResponse">
    <wsdl:part element="tns:DeleteUserResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="DuplicateUserDirectoryException">
    <wsdl:part element="tns:DuplicateUserDirectoryException" name="DuplicateUserDirectoryException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetUserDirectoryCapabilities">
    <wsdl:part element="tns:GetUserDirectoryCapabilities" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetUserDirectoryCapabilitiesResponse">
    <wsdl:part element="tns:GetUserDirectoryCapabilitiesResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateGroupResponse">
    <wsdl:part element="tns:CreateGroupResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetTenantResponse">
    <wsdl:part element="tns:GetTenantResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="DuplicateUserException">
    <wsdl:part element="tns:DuplicateUserException" name="DuplicateUserException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="DeleteGroup">
    <wsdl:part element="tns:DeleteGroup" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetGroupNamesForUser">
    <wsdl:part element="tns:GetGroupNamesForUser" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetGroupNamesResponse">
    <wsdl:part element="tns:GetGroupNamesResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetRoleCodesForGroup">
    <wsdl:part element="tns:GetRoleCodesForGroup" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetTenantName">
    <wsdl:part element="tns:GetTenantName" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ChangePassword">
    <wsdl:part element="tns:ChangePassword" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="DuplicateGroupException">
    <wsdl:part element="tns:DuplicateGroupException" name="DuplicateGroupException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="AddRoleToGroupResponse">
    <wsdl:part element="tns:AddRoleToGroupResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="DeleteUserDirectoryResponse">
    <wsdl:part element="tns:DeleteUserDirectoryResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetUserDirectorySummariesForTenant">
    <wsdl:part element="tns:GetUserDirectorySummariesForTenant" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="AddMemberToGroup">
    <wsdl:part element="tns:AddMemberToGroup" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateUserResponse">
    <wsdl:part element="tns:UpdateUserResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetGroupResponse">
    <wsdl:part element="tns:GetGroupResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetMembersForGroupResponse">
    <wsdl:part element="tns:GetMembersForGroupResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetTenantsForUserDirectory">
    <wsdl:part element="tns:GetTenantsForUserDirectory" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateUser">
    <wsdl:part element="tns:UpdateUser" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="DeleteGroupResponse">
    <wsdl:part element="tns:DeleteGroupResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetTenants">
    <wsdl:part element="tns:GetTenants" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetUserDirectorySummaries">
    <wsdl:part element="tns:GetUserDirectorySummaries" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetGroups">
    <wsdl:part element="tns:GetGroups" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetUsers">
    <wsdl:part element="tns:GetUsers" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateTenant">
    <wsdl:part element="tns:UpdateTenant" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateUser">
    <wsdl:part element="tns:CreateUser" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="RemoveUserDirectoryFromTenantResponse">
    <wsdl:part element="tns:RemoveUserDirectoryFromTenantResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateGroup">
    <wsdl:part element="tns:CreateGroup" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetUserDirectoryName">
    <wsdl:part element="tns:GetUserDirectoryName" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetGroupNamesForUserResponse">
    <wsdl:part element="tns:GetGroupNamesForUserResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="RemoveRoleFromGroup">
    <wsdl:part element="tns:RemoveRoleFromGroup" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetUser">
    <wsdl:part element="tns:GetUser" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetUserDirectory">
    <wsdl:part element="tns:GetUserDirectory" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="UserDirectoryNotFoundException">
    <wsdl:part element="tns:UserDirectoryNotFoundException" name="UserDirectoryNotFoundException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="DeleteUserDirectory">
    <wsdl:part element="tns:DeleteUserDirectory" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ResetPasswordResponse">
    <wsdl:part element="tns:ResetPasswordResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="InvalidArgumentException">
    <wsdl:part element="ns1:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetUserNameResponse">
    <wsdl:part element="tns:GetUserNameResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="RemoveMemberFromGroup">
    <wsdl:part element="tns:RemoveMemberFromGroup" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="AdminChangePasswordResponse">
    <wsdl:part element="tns:AdminChangePasswordResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetGroupNames">
    <wsdl:part element="tns:GetGroupNames" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="UserNotFoundException">
    <wsdl:part element="tns:UserNotFoundException" name="UserNotFoundException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetUserDirectories">
    <wsdl:part element="tns:GetUserDirectories" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetRolesForGroup">
    <wsdl:part element="tns:GetRolesForGroup" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetTenant">
    <wsdl:part element="tns:GetTenant" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ChangePasswordResponse">
    <wsdl:part element="tns:ChangePasswordResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateTenantResponse">
    <wsdl:part element="tns:UpdateTenantResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="UserDirectoryTypeNotFoundException">
    <wsdl:part element="tns:UserDirectoryTypeNotFoundException" name="UserDirectoryTypeNotFoundException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetGroup">
    <wsdl:part element="tns:GetGroup" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="DeleteTenantResponse">
    <wsdl:part element="tns:DeleteTenantResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateUserDirectoryResponse">
    <wsdl:part element="tns:UpdateUserDirectoryResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="InvalidSecurityCodeException">
    <wsdl:part element="tns:InvalidSecurityCodeException" name="InvalidSecurityCodeException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="RemoveUserDirectoryFromTenant">
    <wsdl:part element="tns:RemoveUserDirectoryFromTenant" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetUserDirectoryNameResponse">
    <wsdl:part element="tns:GetUserDirectoryNameResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GroupRoleNotFoundException">
    <wsdl:part element="tns:GroupRoleNotFoundException" name="GroupRoleNotFoundException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetTenantsResponse">
    <wsdl:part element="tns:GetTenantsResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="TenantNotFoundException">
    <wsdl:part element="tns:TenantNotFoundException" name="TenantNotFoundException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GroupNotFoundException">
    <wsdl:part element="tns:GroupNotFoundException" name="GroupNotFoundException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetRoles">
    <wsdl:part element="tns:GetRoles" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateGroupResponse">
    <wsdl:part element="tns:UpdateGroupResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetUserDirectoryTypes">
    <wsdl:part element="tns:GetUserDirectoryTypes" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="RemoveMemberFromGroupResponse">
    <wsdl:part element="tns:RemoveMemberFromGroupResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateTenant">
    <wsdl:part element="tns:CreateTenant" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetRolesResponse">
    <wsdl:part element="tns:GetRolesResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetMembersForGroup">
    <wsdl:part element="tns:GetMembersForGroup" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="DeleteUser">
    <wsdl:part element="tns:DeleteUser" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetUserDirectoryTypeForUserDirectory">
    <wsdl:part element="tns:GetUserDirectoryTypeForUserDirectory" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ExistingTenantUserDirectoryException">
    <wsdl:part element="tns:ExistingTenantUserDirectoryException" name="ExistingTenantUserDirectoryException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="RoleNotFoundException">
    <wsdl:part element="tns:RoleNotFoundException" name="RoleNotFoundException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ServiceUnavailableException">
    <wsdl:part element="ns1:ServiceUnavailableException" name="ServiceUnavailableException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="AuthenticationFailedException">
    <wsdl:part element="tns:AuthenticationFailedException" name="AuthenticationFailedException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ResetPassword">
    <wsdl:part element="tns:ResetPassword" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="DuplicateTenantException">
    <wsdl:part element="tns:DuplicateTenantException" name="DuplicateTenantException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetUsersResponse">
    <wsdl:part element="tns:GetUsersResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateGroup">
    <wsdl:part element="tns:UpdateGroup" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetTenantNameResponse">
    <wsdl:part element="tns:GetTenantNameResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetUserResponse">
    <wsdl:part element="tns:GetUserResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ExistingGroupMembersException">
    <wsdl:part element="tns:ExistingGroupMembersException" name="ExistingGroupMembersException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetUserDirectoriesForTenantResponse">
    <wsdl:part element="tns:GetUserDirectoriesForTenantResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetUserDirectoryResponse">
    <wsdl:part element="tns:GetUserDirectoryResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetUserDirectoriesResponse">
    <wsdl:part element="tns:GetUserDirectoriesResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="AddRoleToGroup">
    <wsdl:part element="tns:AddRoleToGroup" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="RemoveRoleFromGroupResponse">
    <wsdl:part element="tns:RemoveRoleFromGroupResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetGroupsResponse">
    <wsdl:part element="tns:GetGroupsResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetUserDirectorySummariesForTenantResponse">
    <wsdl:part element="tns:GetUserDirectorySummariesForTenantResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:portType name="ISecurityService">
    <wsdl:operation name="GetUser">
      <wsdl:input message="tns:GetUser" name="GetUser">
    </wsdl:input>
      <wsdl:output message="tns:GetUserResponse" name="GetUserResponse">
    </wsdl:output>
      <wsdl:fault message="tns:UserNotFoundException" name="UserNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserDirectoryNotFoundException" name="UserDirectoryNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:ServiceUnavailableException" name="ServiceUnavailableException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetUserDirectory">
      <wsdl:input message="tns:GetUserDirectory" name="GetUserDirectory">
    </wsdl:input>
      <wsdl:output message="tns:GetUserDirectoryResponse" name="GetUserDirectoryResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserDirectoryNotFoundException" name="UserDirectoryNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:ServiceUnavailableException" name="ServiceUnavailableException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetUserDirectoryCapabilities">
      <wsdl:input message="tns:GetUserDirectoryCapabilities" name="GetUserDirectoryCapabilities">
    </wsdl:input>
      <wsdl:output message="tns:GetUserDirectoryCapabilitiesResponse" name="GetUserDirectoryCapabilitiesResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserDirectoryNotFoundException" name="UserDirectoryNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:ServiceUnavailableException" name="ServiceUnavailableException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="DeleteUserDirectory">
      <wsdl:input message="tns:DeleteUserDirectory" name="DeleteUserDirectory">
    </wsdl:input>
      <wsdl:output message="tns:DeleteUserDirectoryResponse" name="DeleteUserDirectoryResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserDirectoryNotFoundException" name="UserDirectoryNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:ServiceUnavailableException" name="ServiceUnavailableException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetRoles">
      <wsdl:input message="tns:GetRoles" name="GetRoles">
    </wsdl:input>
      <wsdl:output message="tns:GetRolesResponse" name="GetRolesResponse">
    </wsdl:output>
      <wsdl:fault message="tns:ServiceUnavailableException" name="ServiceUnavailableException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetUserDirectoryTypes">
      <wsdl:input message="tns:GetUserDirectoryTypes" name="GetUserDirectoryTypes">
    </wsdl:input>
      <wsdl:output message="tns:GetUserDirectoryTypesResponse" name="GetUserDirectoryTypesResponse">
    </wsdl:output>
      <wsdl:fault message="tns:ServiceUnavailableException" name="ServiceUnavailableException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="CreateTenant">
      <wsdl:input message="tns:CreateTenant" name="CreateTenant">
    </wsdl:input>
      <wsdl:output message="tns:CreateTenantResponse" name="CreateTenantResponse">
    </wsdl:output>
      <wsdl:fault message="tns:DuplicateTenantException" name="DuplicateTenantException">
    </wsdl:fault>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:ServiceUnavailableException" name="ServiceUnavailableException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetUserName">
      <wsdl:input message="tns:GetUserName" name="GetUserName">
    </wsdl:input>
      <wsdl:output message="tns:GetUserNameResponse" name="GetUserNameResponse">
    </wsdl:output>
      <wsdl:fault message="tns:UserNotFoundException" name="UserNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserDirectoryNotFoundException" name="UserDirectoryNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:ServiceUnavailableException" name="ServiceUnavailableException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="RemoveMemberFromGroup">
      <wsdl:input message="tns:RemoveMemberFromGroup" name="RemoveMemberFromGroup">
    </wsdl:input>
      <wsdl:output message="tns:RemoveMemberFromGroupResponse" name="RemoveMemberFromGroupResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:GroupNotFoundException" name="GroupNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserDirectoryNotFoundException" name="UserDirectoryNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:ServiceUnavailableException" name="ServiceUnavailableException">
    </wsdl:fault>
      <wsdl:fault message="tns:GroupMemberNotFoundException" name="GroupMemberNotFoundException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="DeleteGroup">
      <wsdl:input message="tns:DeleteGroup" name="DeleteGroup">
    </wsdl:input>
      <wsdl:output message="tns:DeleteGroupResponse" name="DeleteGroupResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:ExistingGroupMembersException" name="ExistingGroupMembersException">
    </wsdl:fault>
      <wsdl:fault message="tns:GroupNotFoundException" name="GroupNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserDirectoryNotFoundException" name="UserDirectoryNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:ServiceUnavailableException" name="ServiceUnavailableException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetMembersForGroup">
      <wsdl:input message="tns:GetMembersForGroup" name="GetMembersForGroup">
    </wsdl:input>
      <wsdl:output message="tns:GetMembersForGroupResponse" name="GetMembersForGroupResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:GroupNotFoundException" name="GroupNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserDirectoryNotFoundException" name="UserDirectoryNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:ServiceUnavailableException" name="ServiceUnavailableException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetGroupNamesForUser">
      <wsdl:input message="tns:GetGroupNamesForUser" name="GetGroupNamesForUser">
    </wsdl:input>
      <wsdl:output message="tns:GetGroupNamesForUserResponse" name="GetGroupNamesForUserResponse">
    </wsdl:output>
      <wsdl:fault message="tns:UserNotFoundException" name="UserNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserDirectoryNotFoundException" name="UserDirectoryNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:ServiceUnavailableException" name="ServiceUnavailableException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="DeleteUser">
      <wsdl:input message="tns:DeleteUser" name="DeleteUser">
    </wsdl:input>
      <wsdl:output message="tns:DeleteUserResponse" name="DeleteUserResponse">
    </wsdl:output>
      <wsdl:fault message="tns:UserNotFoundException" name="UserNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserDirectoryNotFoundException" name="UserDirectoryNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:ServiceUnavailableException" name="ServiceUnavailableException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetUserDirectoryTypeForUserDirectory">
      <wsdl:input message="tns:GetUserDirectoryTypeForUserDirectory" name="GetUserDirectoryTypeForUserDirectory">
    </wsdl:input>
      <wsdl:output message="tns:GetUserDirectoryTypeForUserDirectoryResponse" name="GetUserDirectoryTypeForUserDirectoryResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserDirectoryTypeNotFoundException" name="UserDirectoryTypeNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserDirectoryNotFoundException" name="UserDirectoryNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:ServiceUnavailableException" name="ServiceUnavailableException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="DeleteTenant">
      <wsdl:input message="tns:DeleteTenant" name="DeleteTenant">
    </wsdl:input>
      <wsdl:output message="tns:DeleteTenantResponse" name="DeleteTenantResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:TenantNotFoundException" name="TenantNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:ServiceUnavailableException" name="ServiceUnavailableException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetRoleCodesForGroup">
      <wsdl:input message="tns:GetRoleCodesForGroup" name="GetRoleCodesForGroup">
    </wsdl:input>
      <wsdl:output message="tns:GetRoleCodesForGroupResponse" name="GetRoleCodesForGroupResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:GroupNotFoundException" name="GroupNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserDirectoryNotFoundException" name="UserDirectoryNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:ServiceUnavailableException" name="ServiceUnavailableException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetTenantName">
      <wsdl:input message="tns:GetTenantName" name="GetTenantName">
    </wsdl:input>
      <wsdl:output message="tns:GetTenantNameResponse" name="GetTenantNameResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:TenantNotFoundException" name="TenantNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:ServiceUnavailableException" name="ServiceUnavailableException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetGroupNames">
      <wsdl:input message="tns:GetGroupNames" name="GetGroupNames">
    </wsdl:input>
      <wsdl:output message="tns:GetGroupNamesResponse" name="GetGroupNamesResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserDirectoryNotFoundException" name="UserDirectoryNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:ServiceUnavailableException" name="ServiceUnavailableException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="AddUserDirectoryToTenant">
      <wsdl:input message="tns:AddUserDirectoryToTenant" name="AddUserDirectoryToTenant">
    </wsdl:input>
      <wsdl:output message="tns:AddUserDirectoryToTenantResponse" name="AddUserDirectoryToTenantResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:TenantNotFoundException" name="TenantNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:ExistingTenantUserDirectoryException" name="ExistingTenantUserDirectoryException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserDirectoryNotFoundException" name="UserDirectoryNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:ServiceUnavailableException" name="ServiceUnavailableException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="ChangePassword">
      <wsdl:input message="tns:ChangePassword" name="ChangePassword">
    </wsdl:input>
      <wsdl:output message="tns:ChangePasswordResponse" name="ChangePasswordResponse">
    </wsdl:output>
      <wsdl:fault message="tns:UserNotFoundException" name="UserNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserLockedException" name="UserLockedException">
    </wsdl:fault>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:AuthenticationFailedException" name="AuthenticationFailedException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserDirectoryNotFoundException" name="UserDirectoryNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:ServiceUnavailableException" name="ServiceUnavailableException">
    </wsdl:fault>
      <wsdl:fault message="tns:ExistingPasswordException" name="ExistingPasswordException">
    </wsdl:fault>
      <wsdl:fault message="tns:InvalidSecurityCodeException" name="InvalidSecurityCodeException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetUserDirectoriesForTenant">
      <wsdl:input message="tns:GetUserDirectoriesForTenant" name="GetUserDirectoriesForTenant">
    </wsdl:input>
      <wsdl:output message="tns:GetUserDirectoriesForTenantResponse" name="GetUserDirectoriesForTenantResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:TenantNotFoundException" name="TenantNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:ServiceUnavailableException" name="ServiceUnavailableException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="ResetPassword">
      <wsdl:input message="tns:ResetPassword" name="ResetPassword">
    </wsdl:input>
      <wsdl:output message="tns:ResetPasswordResponse" name="ResetPasswordResponse">
    </wsdl:output>
      <wsdl:fault message="tns:UserNotFoundException" name="UserNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:ServiceUnavailableException" name="ServiceUnavailableException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="AdminChangePassword">
      <wsdl:input message="tns:AdminChangePassword" name="AdminChangePassword">
    </wsdl:input>
      <wsdl:output message="tns:AdminChangePasswordResponse" name="AdminChangePasswordResponse">
    </wsdl:output>
      <wsdl:fault message="tns:UserNotFoundException" name="UserNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserDirectoryNotFoundException" name="UserDirectoryNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:ServiceUnavailableException" name="ServiceUnavailableException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetUserDirectories">
      <wsdl:input message="tns:GetUserDirectories" name="GetUserDirectories">
    </wsdl:input>
      <wsdl:output message="tns:GetUserDirectoriesResponse" name="GetUserDirectoriesResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:ServiceUnavailableException" name="ServiceUnavailableException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetRolesForGroup">
      <wsdl:input message="tns:GetRolesForGroup" name="GetRolesForGroup">
    </wsdl:input>
      <wsdl:output message="tns:GetRolesForGroupResponse" name="GetRolesForGroupResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:GroupNotFoundException" name="GroupNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserDirectoryNotFoundException" name="UserDirectoryNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:ServiceUnavailableException" name="ServiceUnavailableException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetUserDirectorySummariesForTenant">
      <wsdl:input message="tns:GetUserDirectorySummariesForTenant" name="GetUserDirectorySummariesForTenant">
    </wsdl:input>
      <wsdl:output message="tns:GetUserDirectorySummariesForTenantResponse" name="GetUserDirectorySummariesForTenantResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:TenantNotFoundException" name="TenantNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:ServiceUnavailableException" name="ServiceUnavailableException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="AddMemberToGroup">
      <wsdl:input message="tns:AddMemberToGroup" name="AddMemberToGroup">
    </wsdl:input>
      <wsdl:output message="tns:AddMemberToGroupResponse" name="AddMemberToGroupResponse">
    </wsdl:output>
      <wsdl:fault message="tns:UserNotFoundException" name="UserNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:GroupNotFoundException" name="GroupNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserDirectoryNotFoundException" name="UserDirectoryNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:ServiceUnavailableException" name="ServiceUnavailableException">
    </wsdl:fault>
      <wsdl:fault message="tns:ExistingGroupMemberException" name="ExistingGroupMemberException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetTenant">
      <wsdl:input message="tns:GetTenant" name="GetTenant">
    </wsdl:input>
      <wsdl:output message="tns:GetTenantResponse" name="GetTenantResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:TenantNotFoundException" name="TenantNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:ServiceUnavailableException" name="ServiceUnavailableException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="UpdateGroup">
      <wsdl:input message="tns:UpdateGroup" name="UpdateGroup">
    </wsdl:input>
      <wsdl:output message="tns:UpdateGroupResponse" name="UpdateGroupResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:GroupNotFoundException" name="GroupNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserDirectoryNotFoundException" name="UserDirectoryNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:ServiceUnavailableException" name="ServiceUnavailableException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="UpdateUserDirectory">
      <wsdl:input message="tns:UpdateUserDirectory" name="UpdateUserDirectory">
    </wsdl:input>
      <wsdl:output message="tns:UpdateUserDirectoryResponse" name="UpdateUserDirectoryResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserDirectoryNotFoundException" name="UserDirectoryNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:ServiceUnavailableException" name="ServiceUnavailableException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetTenantsForUserDirectory">
      <wsdl:input message="tns:GetTenantsForUserDirectory" name="GetTenantsForUserDirectory">
    </wsdl:input>
      <wsdl:output message="tns:GetTenantsForUserDirectoryResponse" name="GetTenantsForUserDirectoryResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserDirectoryNotFoundException" name="UserDirectoryNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:ServiceUnavailableException" name="ServiceUnavailableException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="UpdateUser">
      <wsdl:input message="tns:UpdateUser" name="UpdateUser">
    </wsdl:input>
      <wsdl:output message="tns:UpdateUserResponse" name="UpdateUserResponse">
    </wsdl:output>
      <wsdl:fault message="tns:UserNotFoundException" name="UserNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserDirectoryNotFoundException" name="UserDirectoryNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:ServiceUnavailableException" name="ServiceUnavailableException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetTenants">
      <wsdl:input message="tns:GetTenants" name="GetTenants">
    </wsdl:input>
      <wsdl:output message="tns:GetTenantsResponse" name="GetTenantsResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:ServiceUnavailableException" name="ServiceUnavailableException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetGroup">
      <wsdl:input message="tns:GetGroup" name="GetGroup">
    </wsdl:input>
      <wsdl:output message="tns:GetGroupResponse" name="GetGroupResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:GroupNotFoundException" name="GroupNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserDirectoryNotFoundException" name="UserDirectoryNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:ServiceUnavailableException" name="ServiceUnavailableException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="CreateUserDirectory">
      <wsdl:input message="tns:CreateUserDirectory" name="CreateUserDirectory">
    </wsdl:input>
      <wsdl:output message="tns:CreateUserDirectoryResponse" name="CreateUserDirectoryResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:DuplicateUserDirectoryException" name="DuplicateUserDirectoryException">
    </wsdl:fault>
      <wsdl:fault message="tns:ServiceUnavailableException" name="ServiceUnavailableException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetUserDirectorySummaries">
      <wsdl:input message="tns:GetUserDirectorySummaries" name="GetUserDirectorySummaries">
    </wsdl:input>
      <wsdl:output message="tns:GetUserDirectorySummariesResponse" name="GetUserDirectorySummariesResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:ServiceUnavailableException" name="ServiceUnavailableException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetGroups">
      <wsdl:input message="tns:GetGroups" name="GetGroups">
    </wsdl:input>
      <wsdl:output message="tns:GetGroupsResponse" name="GetGroupsResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserDirectoryNotFoundException" name="UserDirectoryNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:ServiceUnavailableException" name="ServiceUnavailableException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetUsers">
      <wsdl:input message="tns:GetUsers" name="GetUsers">
    </wsdl:input>
      <wsdl:output message="tns:GetUsersResponse" name="GetUsersResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserDirectoryNotFoundException" name="UserDirectoryNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:ServiceUnavailableException" name="ServiceUnavailableException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="UpdateTenant">
      <wsdl:input message="tns:UpdateTenant" name="UpdateTenant">
    </wsdl:input>
      <wsdl:output message="tns:UpdateTenantResponse" name="UpdateTenantResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:TenantNotFoundException" name="TenantNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:ServiceUnavailableException" name="ServiceUnavailableException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="RemoveUserDirectoryFromTenant">
      <wsdl:input message="tns:RemoveUserDirectoryFromTenant" name="RemoveUserDirectoryFromTenant">
    </wsdl:input>
      <wsdl:output message="tns:RemoveUserDirectoryFromTenantResponse" name="RemoveUserDirectoryFromTenantResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:TenantNotFoundException" name="TenantNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:TenantUserDirectoryNotFoundException" name="TenantUserDirectoryNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:ServiceUnavailableException" name="ServiceUnavailableException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="CreateUser">
      <wsdl:input message="tns:CreateUser" name="CreateUser">
    </wsdl:input>
      <wsdl:output message="tns:CreateUserResponse" name="CreateUserResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserDirectoryNotFoundException" name="UserDirectoryNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:ServiceUnavailableException" name="ServiceUnavailableException">
    </wsdl:fault>
      <wsdl:fault message="tns:DuplicateUserException" name="DuplicateUserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="CreateGroup">
      <wsdl:input message="tns:CreateGroup" name="CreateGroup">
    </wsdl:input>
      <wsdl:output message="tns:CreateGroupResponse" name="CreateGroupResponse">
    </wsdl:output>
      <wsdl:fault message="tns:DuplicateGroupException" name="DuplicateGroupException">
    </wsdl:fault>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserDirectoryNotFoundException" name="UserDirectoryNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:ServiceUnavailableException" name="ServiceUnavailableException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="AddRoleToGroup">
      <wsdl:input message="tns:AddRoleToGroup" name="AddRoleToGroup">
    </wsdl:input>
      <wsdl:output message="tns:AddRoleToGroupResponse" name="AddRoleToGroupResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:RoleNotFoundException" name="RoleNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:GroupNotFoundException" name="GroupNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserDirectoryNotFoundException" name="UserDirectoryNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:ExistingGroupRoleException" name="ExistingGroupRoleException">
    </wsdl:fault>
      <wsdl:fault message="tns:ServiceUnavailableException" name="ServiceUnavailableException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetUserDirectoryName">
      <wsdl:input message="tns:GetUserDirectoryName" name="GetUserDirectoryName">
    </wsdl:input>
      <wsdl:output message="tns:GetUserDirectoryNameResponse" name="GetUserDirectoryNameResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserDirectoryNotFoundException" name="UserDirectoryNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:ServiceUnavailableException" name="ServiceUnavailableException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="RemoveRoleFromGroup">
      <wsdl:input message="tns:RemoveRoleFromGroup" name="RemoveRoleFromGroup">
    </wsdl:input>
      <wsdl:output message="tns:RemoveRoleFromGroupResponse" name="RemoveRoleFromGroupResponse">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidArgumentException" name="InvalidArgumentException">
    </wsdl:fault>
      <wsdl:fault message="tns:GroupNotFoundException" name="GroupNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:UserDirectoryNotFoundException" name="UserDirectoryNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:ServiceUnavailableException" name="ServiceUnavailableException">
    </wsdl:fault>
      <wsdl:fault message="tns:GroupRoleNotFoundException" name="GroupRoleNotFoundException">
    </wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="SecurityServiceSoapBinding" type="tns:ISecurityService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="GetUser">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="GetUser">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetUserResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserNotFoundException">
        <soap:fault name="UserNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserDirectoryNotFoundException">
        <soap:fault name="UserDirectoryNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ServiceUnavailableException">
        <soap:fault name="ServiceUnavailableException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetUserDirectory">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="GetUserDirectory">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetUserDirectoryResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserDirectoryNotFoundException">
        <soap:fault name="UserDirectoryNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ServiceUnavailableException">
        <soap:fault name="ServiceUnavailableException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetUserDirectoryCapabilities">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="GetUserDirectoryCapabilities">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetUserDirectoryCapabilitiesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserDirectoryNotFoundException">
        <soap:fault name="UserDirectoryNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ServiceUnavailableException">
        <soap:fault name="ServiceUnavailableException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="DeleteUserDirectory">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="DeleteUserDirectory">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="DeleteUserDirectoryResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserDirectoryNotFoundException">
        <soap:fault name="UserDirectoryNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ServiceUnavailableException">
        <soap:fault name="ServiceUnavailableException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetRoles">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="GetRoles">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetRolesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServiceUnavailableException">
        <soap:fault name="ServiceUnavailableException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetUserDirectoryTypes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="GetUserDirectoryTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetUserDirectoryTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServiceUnavailableException">
        <soap:fault name="ServiceUnavailableException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="CreateTenant">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="CreateTenant">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="CreateTenantResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="DuplicateTenantException">
        <soap:fault name="DuplicateTenantException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ServiceUnavailableException">
        <soap:fault name="ServiceUnavailableException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetUserName">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="GetUserName">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetUserNameResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserNotFoundException">
        <soap:fault name="UserNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserDirectoryNotFoundException">
        <soap:fault name="UserDirectoryNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ServiceUnavailableException">
        <soap:fault name="ServiceUnavailableException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="RemoveMemberFromGroup">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="RemoveMemberFromGroup">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="RemoveMemberFromGroupResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GroupNotFoundException">
        <soap:fault name="GroupNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserDirectoryNotFoundException">
        <soap:fault name="UserDirectoryNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ServiceUnavailableException">
        <soap:fault name="ServiceUnavailableException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GroupMemberNotFoundException">
        <soap:fault name="GroupMemberNotFoundException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="DeleteGroup">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="DeleteGroup">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="DeleteGroupResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ExistingGroupMembersException">
        <soap:fault name="ExistingGroupMembersException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GroupNotFoundException">
        <soap:fault name="GroupNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserDirectoryNotFoundException">
        <soap:fault name="UserDirectoryNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ServiceUnavailableException">
        <soap:fault name="ServiceUnavailableException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetMembersForGroup">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="GetMembersForGroup">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetMembersForGroupResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GroupNotFoundException">
        <soap:fault name="GroupNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserDirectoryNotFoundException">
        <soap:fault name="UserDirectoryNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ServiceUnavailableException">
        <soap:fault name="ServiceUnavailableException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetGroupNamesForUser">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="GetGroupNamesForUser">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetGroupNamesForUserResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserNotFoundException">
        <soap:fault name="UserNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserDirectoryNotFoundException">
        <soap:fault name="UserDirectoryNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ServiceUnavailableException">
        <soap:fault name="ServiceUnavailableException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="DeleteUser">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="DeleteUser">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="DeleteUserResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserNotFoundException">
        <soap:fault name="UserNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserDirectoryNotFoundException">
        <soap:fault name="UserDirectoryNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ServiceUnavailableException">
        <soap:fault name="ServiceUnavailableException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetUserDirectoryTypeForUserDirectory">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="GetUserDirectoryTypeForUserDirectory">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetUserDirectoryTypeForUserDirectoryResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserDirectoryTypeNotFoundException">
        <soap:fault name="UserDirectoryTypeNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserDirectoryNotFoundException">
        <soap:fault name="UserDirectoryNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ServiceUnavailableException">
        <soap:fault name="ServiceUnavailableException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="DeleteTenant">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="DeleteTenant">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="DeleteTenantResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="TenantNotFoundException">
        <soap:fault name="TenantNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ServiceUnavailableException">
        <soap:fault name="ServiceUnavailableException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetRoleCodesForGroup">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="GetRoleCodesForGroup">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetRoleCodesForGroupResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GroupNotFoundException">
        <soap:fault name="GroupNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserDirectoryNotFoundException">
        <soap:fault name="UserDirectoryNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ServiceUnavailableException">
        <soap:fault name="ServiceUnavailableException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetTenantName">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="GetTenantName">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetTenantNameResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="TenantNotFoundException">
        <soap:fault name="TenantNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ServiceUnavailableException">
        <soap:fault name="ServiceUnavailableException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetGroupNames">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="GetGroupNames">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetGroupNamesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserDirectoryNotFoundException">
        <soap:fault name="UserDirectoryNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ServiceUnavailableException">
        <soap:fault name="ServiceUnavailableException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="AddUserDirectoryToTenant">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="AddUserDirectoryToTenant">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="AddUserDirectoryToTenantResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="TenantNotFoundException">
        <soap:fault name="TenantNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ExistingTenantUserDirectoryException">
        <soap:fault name="ExistingTenantUserDirectoryException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserDirectoryNotFoundException">
        <soap:fault name="UserDirectoryNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ServiceUnavailableException">
        <soap:fault name="ServiceUnavailableException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="ChangePassword">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="ChangePassword">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="ChangePasswordResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserNotFoundException">
        <soap:fault name="UserNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserLockedException">
        <soap:fault name="UserLockedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="AuthenticationFailedException">
        <soap:fault name="AuthenticationFailedException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserDirectoryNotFoundException">
        <soap:fault name="UserDirectoryNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ServiceUnavailableException">
        <soap:fault name="ServiceUnavailableException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ExistingPasswordException">
        <soap:fault name="ExistingPasswordException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidSecurityCodeException">
        <soap:fault name="InvalidSecurityCodeException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetUserDirectoriesForTenant">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="GetUserDirectoriesForTenant">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetUserDirectoriesForTenantResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="TenantNotFoundException">
        <soap:fault name="TenantNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ServiceUnavailableException">
        <soap:fault name="ServiceUnavailableException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="ResetPassword">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="ResetPassword">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="ResetPasswordResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserNotFoundException">
        <soap:fault name="UserNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ServiceUnavailableException">
        <soap:fault name="ServiceUnavailableException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="AdminChangePassword">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="AdminChangePassword">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="AdminChangePasswordResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserNotFoundException">
        <soap:fault name="UserNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserDirectoryNotFoundException">
        <soap:fault name="UserDirectoryNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ServiceUnavailableException">
        <soap:fault name="ServiceUnavailableException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetUserDirectories">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="GetUserDirectories">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetUserDirectoriesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ServiceUnavailableException">
        <soap:fault name="ServiceUnavailableException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetRolesForGroup">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="GetRolesForGroup">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetRolesForGroupResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GroupNotFoundException">
        <soap:fault name="GroupNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserDirectoryNotFoundException">
        <soap:fault name="UserDirectoryNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ServiceUnavailableException">
        <soap:fault name="ServiceUnavailableException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetUserDirectorySummariesForTenant">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="GetUserDirectorySummariesForTenant">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetUserDirectorySummariesForTenantResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="TenantNotFoundException">
        <soap:fault name="TenantNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ServiceUnavailableException">
        <soap:fault name="ServiceUnavailableException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="AddMemberToGroup">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="AddMemberToGroup">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="AddMemberToGroupResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserNotFoundException">
        <soap:fault name="UserNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GroupNotFoundException">
        <soap:fault name="GroupNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserDirectoryNotFoundException">
        <soap:fault name="UserDirectoryNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ServiceUnavailableException">
        <soap:fault name="ServiceUnavailableException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ExistingGroupMemberException">
        <soap:fault name="ExistingGroupMemberException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetTenant">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="GetTenant">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetTenantResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="TenantNotFoundException">
        <soap:fault name="TenantNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ServiceUnavailableException">
        <soap:fault name="ServiceUnavailableException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="UpdateGroup">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="UpdateGroup">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="UpdateGroupResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GroupNotFoundException">
        <soap:fault name="GroupNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserDirectoryNotFoundException">
        <soap:fault name="UserDirectoryNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ServiceUnavailableException">
        <soap:fault name="ServiceUnavailableException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="UpdateUserDirectory">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="UpdateUserDirectory">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="UpdateUserDirectoryResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserDirectoryNotFoundException">
        <soap:fault name="UserDirectoryNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ServiceUnavailableException">
        <soap:fault name="ServiceUnavailableException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetTenantsForUserDirectory">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="GetTenantsForUserDirectory">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetTenantsForUserDirectoryResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserDirectoryNotFoundException">
        <soap:fault name="UserDirectoryNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ServiceUnavailableException">
        <soap:fault name="ServiceUnavailableException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="UpdateUser">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="UpdateUser">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="UpdateUserResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserNotFoundException">
        <soap:fault name="UserNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserDirectoryNotFoundException">
        <soap:fault name="UserDirectoryNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ServiceUnavailableException">
        <soap:fault name="ServiceUnavailableException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetTenants">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="GetTenants">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetTenantsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ServiceUnavailableException">
        <soap:fault name="ServiceUnavailableException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetGroup">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="GetGroup">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetGroupResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GroupNotFoundException">
        <soap:fault name="GroupNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserDirectoryNotFoundException">
        <soap:fault name="UserDirectoryNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ServiceUnavailableException">
        <soap:fault name="ServiceUnavailableException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="CreateUserDirectory">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="CreateUserDirectory">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="CreateUserDirectoryResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DuplicateUserDirectoryException">
        <soap:fault name="DuplicateUserDirectoryException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ServiceUnavailableException">
        <soap:fault name="ServiceUnavailableException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetUserDirectorySummaries">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="GetUserDirectorySummaries">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetUserDirectorySummariesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ServiceUnavailableException">
        <soap:fault name="ServiceUnavailableException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetGroups">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="GetGroups">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetGroupsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserDirectoryNotFoundException">
        <soap:fault name="UserDirectoryNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ServiceUnavailableException">
        <soap:fault name="ServiceUnavailableException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetUsers">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="GetUsers">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetUsersResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserDirectoryNotFoundException">
        <soap:fault name="UserDirectoryNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ServiceUnavailableException">
        <soap:fault name="ServiceUnavailableException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="UpdateTenant">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="UpdateTenant">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="UpdateTenantResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="TenantNotFoundException">
        <soap:fault name="TenantNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ServiceUnavailableException">
        <soap:fault name="ServiceUnavailableException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="RemoveUserDirectoryFromTenant">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="RemoveUserDirectoryFromTenant">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="RemoveUserDirectoryFromTenantResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="TenantNotFoundException">
        <soap:fault name="TenantNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="TenantUserDirectoryNotFoundException">
        <soap:fault name="TenantUserDirectoryNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ServiceUnavailableException">
        <soap:fault name="ServiceUnavailableException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="CreateUser">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="CreateUser">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="CreateUserResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserDirectoryNotFoundException">
        <soap:fault name="UserDirectoryNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ServiceUnavailableException">
        <soap:fault name="ServiceUnavailableException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="DuplicateUserException">
        <soap:fault name="DuplicateUserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="CreateGroup">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="CreateGroup">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="CreateGroupResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="DuplicateGroupException">
        <soap:fault name="DuplicateGroupException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserDirectoryNotFoundException">
        <soap:fault name="UserDirectoryNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ServiceUnavailableException">
        <soap:fault name="ServiceUnavailableException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="AddRoleToGroup">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="AddRoleToGroup">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="AddRoleToGroupResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RoleNotFoundException">
        <soap:fault name="RoleNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GroupNotFoundException">
        <soap:fault name="GroupNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserDirectoryNotFoundException">
        <soap:fault name="UserDirectoryNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ExistingGroupRoleException">
        <soap:fault name="ExistingGroupRoleException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ServiceUnavailableException">
        <soap:fault name="ServiceUnavailableException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="GetUserDirectoryName">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="GetUserDirectoryName">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="GetUserDirectoryNameResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserDirectoryNotFoundException">
        <soap:fault name="UserDirectoryNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ServiceUnavailableException">
        <soap:fault name="ServiceUnavailableException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="RemoveRoleFromGroup">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="RemoveRoleFromGroup">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="RemoveRoleFromGroupResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidArgumentException">
        <soap:fault name="InvalidArgumentException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GroupNotFoundException">
        <soap:fault name="GroupNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserDirectoryNotFoundException">
        <soap:fault name="UserDirectoryNotFoundException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ServiceUnavailableException">
        <soap:fault name="ServiceUnavailableException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GroupRoleNotFoundException">
        <soap:fault name="GroupRoleNotFoundException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="SecurityService">
    <wsdl:port binding="tns:SecurityServiceSoapBinding" name="ISecurityServicePort">
      <soap:address location="http://localhost:8080/service/SecurityService"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>